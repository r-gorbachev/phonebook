
package org.phonebook.ws.sei.role;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import org.phonebook.beans.Role;
import org.phonebook.exceptions.WSException;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "RoleWS", targetNamespace = "http://phonebook.org/ws")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface RoleWS {


    /**
     * 
     * @param arg0
     * @return
     *     returns org.phonebook.ws.sei.role.Role
     * @throws WSException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRoleById", targetNamespace = "http://phonebook.org/ws", className = "org.phonebook.ws.sei.role.GetRoleById")
    @ResponseWrapper(localName = "getRoleByIdResponse", targetNamespace = "http://phonebook.org/ws", className = "org.phonebook.ws.sei.role.GetRoleByIdResponse")
    @Action(input = "http://phonebook.org/ws/RoleWS/getRoleByIdRequest", output = "http://phonebook.org/ws/RoleWS/getRoleByIdResponse", fault = {
        @FaultAction(className = WSException.class, value = "http://phonebook.org/ws/RoleWS/getRoleById/Fault/ServiceException")
    })
    public Role getRoleById(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0)
        throws WSException
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns org.phonebook.ws.sei.role.Role
     * @throws WSException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRoleByName", targetNamespace = "http://phonebook.org/ws", className = "org.phonebook.ws.sei.role.GetRoleByName")
    @ResponseWrapper(localName = "getRoleByNameResponse", targetNamespace = "http://phonebook.org/ws", className = "org.phonebook.ws.sei.role.GetRoleByNameResponse")
    @Action(input = "http://phonebook.org/ws/RoleWS/getRoleByNameRequest", output = "http://phonebook.org/ws/RoleWS/getRoleByNameResponse", fault = {
        @FaultAction(className = WSException.class, value = "http://phonebook.org/ws/RoleWS/getRoleByName/Fault/ServiceException")
    })
    public Role getRoleByName(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws WSException
    ;

    /**
     * 
     * @return
     *     returns java.util.List<org.phonebook.ws.sei.role.Role>
     * @throws WSException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllRoles", targetNamespace = "http://phonebook.org/ws", className = "org.phonebook.ws.sei.role.GetAllRoles")
    @ResponseWrapper(localName = "getAllRolesResponse", targetNamespace = "http://phonebook.org/ws", className = "org.phonebook.ws.sei.role.GetAllRolesResponse")
    @Action(input = "http://phonebook.org/ws/RoleWS/getAllRolesRequest", output = "http://phonebook.org/ws/RoleWS/getAllRolesResponse", fault = {
        @FaultAction(className = WSException.class, value = "http://phonebook.org/ws/RoleWS/getAllRoles/Fault/ServiceException")
    })
    public List<Role> getAllRoles()
        throws WSException
    ;

}
