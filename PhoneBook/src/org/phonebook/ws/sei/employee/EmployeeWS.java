
package org.phonebook.ws.sei.employee;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import org.phonebook.beans.Employee;
import org.phonebook.exceptions.WSException;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "EmployeeWS", targetNamespace = "http://phonebook.org/ws")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface EmployeeWS {


    /**
     * 
     * @param arg0
     * @throws WSException
     */
    @WebMethod
    @RequestWrapper(localName = "remove", targetNamespace = "http://phonebook.org/ws", className = "org.phonebook.ws.sei.employee.Remove")
    @ResponseWrapper(localName = "removeResponse", targetNamespace = "http://phonebook.org/ws", className = "org.phonebook.ws.sei.employee.RemoveResponse")
    @Action(input = "http://phonebook.org/ws/EmployeeWS/removeRequest", output = "http://phonebook.org/ws/EmployeeWS/removeResponse", fault = {
        @FaultAction(className = WSException.class, value = "http://phonebook.org/ws/EmployeeWS/remove/Fault/ServiceException")
    })
    public void remove(
        @WebParam(name = "arg0", targetNamespace = "")
        Employee arg0)
        throws WSException
    ;

    /**
     * 
     * @param arg0
     * @throws WSException
     */
    @WebMethod
    @RequestWrapper(localName = "update", targetNamespace = "http://phonebook.org/ws", className = "org.phonebook.ws.sei.employee.Update")
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "http://phonebook.org/ws", className = "org.phonebook.ws.sei.employee.UpdateResponse")
    @Action(input = "http://phonebook.org/ws/EmployeeWS/updateRequest", output = "http://phonebook.org/ws/EmployeeWS/updateResponse", fault = {
        @FaultAction(className = WSException.class, value = "http://phonebook.org/ws/EmployeeWS/update/Fault/ServiceException")
    })
    public void update(
        @WebParam(name = "arg0", targetNamespace = "")
        Employee arg0)
        throws WSException
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     * @throws WSException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addEmployee", targetNamespace = "http://phonebook.org/ws", className = "org.phonebook.ws.sei.employee.AddEmployee")
    @ResponseWrapper(localName = "addEmployeeResponse", targetNamespace = "http://phonebook.org/ws", className = "org.phonebook.ws.sei.employee.AddEmployeeResponse")
    @Action(input = "http://phonebook.org/ws/EmployeeWS/addEmployeeRequest", output = "http://phonebook.org/ws/EmployeeWS/addEmployeeResponse", fault = {
        @FaultAction(className = WSException.class, value = "http://phonebook.org/ws/EmployeeWS/addEmployee/Fault/ServiceException")
    })
    public boolean addEmployee(
        @WebParam(name = "arg0", targetNamespace = "")
        Employee arg0)
        throws WSException
    ;

    /**
     * 
     * @return
     *     returns java.util.List<org.phonebook.ws.sei.employee.Employee>
     * @throws WSException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllEmployees", targetNamespace = "http://phonebook.org/ws", className = "org.phonebook.ws.sei.employee.GetAllEmployees")
    @ResponseWrapper(localName = "getAllEmployeesResponse", targetNamespace = "http://phonebook.org/ws", className = "org.phonebook.ws.sei.employee.GetAllEmployeesResponse")
    @Action(input = "http://phonebook.org/ws/EmployeeWS/getAllEmployeesRequest", output = "http://phonebook.org/ws/EmployeeWS/getAllEmployeesResponse", fault = {
        @FaultAction(className = WSException.class, value = "http://phonebook.org/ws/EmployeeWS/getAllEmployees/Fault/ServiceException")
    })
    public List<Employee> getAllEmployees()
        throws WSException
    ;

    /**
     * 
     * @param arg5
     * @param arg4
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<org.phonebook.ws.sei.employee.Employee>
     * @throws WSException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findEmployees", targetNamespace = "http://phonebook.org/ws", className = "org.phonebook.ws.sei.employee.FindEmployees")
    @ResponseWrapper(localName = "findEmployeesResponse", targetNamespace = "http://phonebook.org/ws", className = "org.phonebook.ws.sei.employee.FindEmployeesResponse")
    @Action(input = "http://phonebook.org/ws/EmployeeWS/findEmployeesRequest", output = "http://phonebook.org/ws/EmployeeWS/findEmployeesResponse", fault = {
        @FaultAction(className = WSException.class, value = "http://phonebook.org/ws/EmployeeWS/findEmployees/Fault/ServiceException")
    })
    public List<Employee> findEmployees(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        int arg5)
        throws WSException
    ;

}
